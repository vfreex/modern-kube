- name: download kubernetes-node
  get_url:
    dest: /tmp/kubernetes-node-linux-amd64.tar.gz
    url: https://storage.googleapis.com/kubernetes-release/release/v1.16.0/kubernetes-node-linux-amd64.tar.gz
    checksum: sha256:23f93b6b9967b22581869fd7b6f43506ccb2f522b63805cb77206b2ed183bc8b
  environment:
    http_proxy: "{{ kubelet_download_http_proxy | default('') }}"
    https_proxy: "{{ kubelet_download_https_proxy | default('') }}"

- name: unarchive
  unarchive:
    dest: /tmp
    src: /tmp/kubernetes-node-linux-amd64.tar.gz
    remote_src: yes

- name: install
  copy:
    dest: "/usr/local/bin/{{ item }}"
    src: "/tmp/kubernetes/node/bin/{{ item }}"
    remote_src: yes
    mode: 0755
  with_items:
  - kubelet
  - kubeadm
  notify: restart kubelet

- name: mkdirs
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /etc/kubernetes/manifests
  - /var/lib/kubelet

- name: Enable br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Persist br_netfilter module
  copy:
    dest: /etc/modules-load.d/k8s-kubelet.conf
    content: br_netfilter

- name: Modprode Kernel Module for IPVS
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - ip_vs
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
    - nf_conntrack

- name: Persist ip_vs modules
  copy:
    dest: /etc/modules-load.d/k8s-ipvs.conf
    content: |
      ip_vs
      ip_vs_rr
      ip_vs_wrr
      ip_vs_sh
      nf_conntrack

- name: Enable bridge-nf-call tables
  sysctl:
    name: "{{ item }}"
    state: present
    sysctl_file: "/etc/sysctl.d/99-k8s-kubelet.conf"
    value: 1
    reload: yes
  with_items:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-arptables
    - net.bridge.bridge-nf-call-ip6tables

# config net.ipv4.ip_local_reserved_ports

- name: service defaults
  template:
    dest: /etc/sysconfig/kubelet
    src: kubelet.default.env.j2
  notify: restart kubelet

- name: service
  template:
    dest: /etc/systemd/system/kubelet.service
    src: kubelet.service.j2
  notify: restart kubelet

- name: kubelet service
  systemd:
    name: kubelet
    state: started
    enabled: yes
    daemon_reload: yes
